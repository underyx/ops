apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config-pvc
  namespace: media
  labels:
    app: sonarr
spec:
  storageClassName: rook-ceph-block
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: sonarr
  namespace: media
  labels:
    app: sonarr
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
        - name: app
          image: linuxserver/sonarr:3.0.3.688-ls168
          ports:
            - containerPort: 8989
          env:
            - name: PUID
              value: "797"
            - name: PGID
              value: "797"
          volumeMounts:
            - name: sonarr-config
              mountPath: /config
            - name: sonarr-media
              mountPath: /media
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
            - name: rtc
              mountPath: /dev/rtc
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 256Mi
      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config-pvc
        - name: sonarr-media
          persistentVolumeClaim:
            claimName: media-pvc
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: rtc
          hostPath:
            path: /dev/rtc
      securityContext:
        fsGroup: 797
---
kind: Service
apiVersion: v1
metadata:
  name: sonarr-svc
  namespace: media
spec:
  ports:
    - port: 80
      targetPort: 8989
  selector:
    app: sonarr
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: sonarr-ingress
  namespace: media
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  rules:
    - host: sonarr.underyx.me
      http:
        paths:
          - backend:
              serviceName: sonarr-svc
              servicePort: 80
            path: /
  tls:
    - hosts:
        - sonarr.underyx.me
      secretName: sonarr-tls
